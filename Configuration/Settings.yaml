
Neos:
  ContentRepository:
    Search:
      # we want to keep complexity lower; so we only index the live workspace
      indexAllWorkspaces: false

      # to keep the number of issues low when using the Neos backend and Elasticsearch is not properly set up,
      # we disable realtime indexing and resort only to batch indexing.
      realtimeIndexing:
        enabled: false

  Neos:
    fusion:
      autoInclude:
        'Sandstorm.LightweightElasticsearch': true

  Fusion:
    defaultContext:
      'Elasticsearch': Sandstorm\LightweightElasticsearch\Query\Eel\ElasticsearchHelper


Sandstorm:
  LightweightElasticsearch:
    # either "log" or "throw". For dev, we want to throw elasticsearch exceptions;
    # for prod, we want to log them.
    handleElasticsearchExceptions: log



    elasticsearch:
      baseUrl: http://127.0.0.1:9200


    defaultConfigurationPerType:
      string:
        elasticSearchMapping:
          type: keyword
        indexing: '${value}'
      boolean:
        indexing: '${value}'
      integer:
        indexing: '${value}'
      date:
        indexing: '${(value ? Date.format(value, ''Y-m-d\TH:i:s'') + ''Z'' : null)}'
      Neos\Media\Domain\Model\Video:
        indexing: ''
      Neos\Media\Domain\Model\ImageInterface:
        indexing: ''
      references:
        indexing: '${Indexing.convertArrayOfNodesToArrayOfNodeIdentifiers(value)}'
      reference:
        indexing: '${value.identifier}'

    defaultContext:
      q: Neos\Eel\FlowQuery\FlowQuery::q
      String: Neos\Eel\Helper\StringHelper
      Array: Neos\Eel\Helper\ArrayHelper
      Date: Neos\Eel\Helper\DateHelper
      Indexing: Sandstorm\LightweightElasticsearch\Indexing\Eel\IndexingHelper
