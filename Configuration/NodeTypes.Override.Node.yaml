'Neos.Neos:Node': &node
  search:
    fulltext:
      enable: true
  properties:
    'neos_nodeaggregateid':
      search:
        elasticSearchMapping:
          type: keyword
        indexing: '${node.nodeAggregateId.value}'

    'neos_workspace':
      search:
        elasticSearchMapping:
          type: keyword
        indexing: '${Indexing.workspaceNameForNode(node)}'

    'neos_path':
      search:
        elasticSearchMapping:
          type: keyword
        indexing: '${node.path}'

    'neos_ancestor_ids':
      search:
        elasticSearchMapping:
          type: keyword
        # we index *all* parent IDs as separate tokens to allow for efficient searching without a prefix query
        indexing: '${Array.map(q(node).parents().get(), node => node.nodeAggregateId.value)}'

    'neos_sort_index':
      search:
        elasticSearchMapping:
          type: integer
        indexing: '${node.index}'

    # we index the node type INCLUDING ALL SUPERTYPES
    'neos_type_and_supertypes':
      search:
        elasticSearchMapping:
          type: keyword
        indexing: '${Indexing.extractNodeTypeNamesAndSupertypes(node.nodeType)}'

    'neos_last_modification_date_time':
      search:
        elasticSearchMapping:
          type: date
          format: 'date_time_no_millis'
        indexing: '${(node.lastModificationDateTime ? Date.format(node.lastModificationDateTime, "Y-m-d\TH:i:sP") : null)}'

    'neos_last_publication_date_time':
      search:
        elasticSearchMapping:
          type: date
          format: 'date_time_no_millis'
        indexing: '${(node.lastPublicationDateTime ? Date.format(node.lastPublicationDateTime, "Y-m-d\TH:i:sP") : null)}'

    'neos_creation_date_time':
      search:
        elasticSearchMapping:
          type: date
          format: 'date_time_no_millis'
        indexing: '${(node.creationDateTime ? Date.format(node.creationDateTime, "Y-m-d\TH:i:sP") : null)}'

'unstructured': *node
